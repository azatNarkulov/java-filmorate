DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS review_likes CASCADE;
DROP TABLE IF EXISTS events CASCADE;

CREATE TABLE IF NOT EXISTS mpa(
    id       INT AUTO_INCREMENT PRIMARY KEY,
    mpa_name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS films(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  VARCHAR(200) NOT NULL,
    release_date DATE NOT NULL,
    duration     INT NOT NULL,
    mpa_id       INT,
    FOREIGN KEY (mpa_id) REFERENCES mpa(id)
);

CREATE TABLE IF NOT EXISTS users(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255) NOT NULL,
    login    VARCHAR(200) NOT NULL,
    name     VARCHAR(255),
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friendship(
    user_id   BIGINT,
    friend_id BIGINT,
    confirmed boolean DEFAULT FALSE,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes(
    film_id BIGINT,
    user_id BIGINT,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genres(
    id         INT AUTO_INCREMENT PRIMARY KEY,
    genre_name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS film_genres(
    genre_id INT,
    film_id  BIGINT,
    PRIMARY KEY (genre_id, film_id),
    FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id     BIGINT NOT NULL,
    user_id     BIGINT NOT NULL,
    content     TEXT NOT NULL,
    is_positive BOOLEAN NOT NULL,
    useful      INTEGER DEFAULT 0,
    FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes (
    review_id   BIGINT,
    user_id     BIGINT,
    is_like     BOOLEAN NOT NULL,
    PRIMARY KEY (review_id, user_id),
    FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS events(
    event_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp       BIGINT NOT NULL,
    user_id         BIGINT NOT NULL,
    event_type      VARCHAR(10) NOT NULL CHECK (event_type IN ('LIKE', 'REVIEW', 'FRIEND')),
    operation       VARCHAR(10) NOT NULL CHECK (operation IN('REMOVE', 'ADD', 'UPDATE')),
    entity_id       BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id)
);